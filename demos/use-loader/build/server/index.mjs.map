{
  "version": 3,
  "sources": ["../../.ice/Users/luhc228/workspace/github/icejs3-demo/demos/use-loader/.ice/env.server.ts", "../../.ice/Users/luhc228/workspace/github/icejs3-demo/demos/use-loader/.ice/entry.server.ts", "../../src/Users/luhc228/workspace/github/icejs3-demo/demos/use-loader/src/app.ts", "../../.ice/Users/luhc228/workspace/github/icejs3-demo/demos/use-loader/.ice/index.ts", "../../src/Users/luhc228/workspace/github/icejs3-demo/demos/use-loader/src/document.tsx", "asset-manifest:virtual:assets-manifest.json", "../../.ice/Users/luhc228/workspace/github/icejs3-demo/demos/use-loader/.ice/routes.ts", "../../.ice/Users/luhc228/workspace/github/icejs3-demo/demos/use-loader/.ice/routes-config.bundle.mjs"],
  "sourcesContent": ["// Define process.env in top make it possible to use ICE_CORE_* in @ice/runtime, esbuild define options doesn't have the ability\n// The runtime value such as __process.env.ICE_CORE_*__ will be replaced by esbuild define, so the value is real-time\n\nprocess.env.ICE_CORE_MODE = __process.env.ICE_CORE_MODE__;\nprocess.env.ICE_CORE_ROUTER = __process.env.ICE_CORE_ROUTER__;\nprocess.env.ICE_CORE_ERROR_BOUNDARY = __process.env.ICE_CORE_ERROR_BOUNDARY__;\nprocess.env.ICE_CORE_INITIAL_DATA = __process.env.ICE_CORE_INITIAL_DATA__;\nprocess.env.ICE_CORE_DEV_PORT = __process.env.ICE_CORE_DEV_PORT__;", "import './env.server';\nimport * as runtime from '@ice/runtime/server';\nimport * as app from '@/app';\nimport Document from '@/document';\nimport type { RenderMode, DistType } from '@ice/runtime';\n// @ts-ignore\nimport assetsManifest from 'virtual:assets-manifest.json';\nimport routes from './routes';\nimport routesConfig from './routes-config.bundle.mjs';\n\n// Do not inject runtime modules when render mode is document only.\nconst commons = [];\nconst statics = [];\nconst runtimeModules = { commons, statics };\n\nconst getRouterBasename = () => {\n  const appConfig = runtime.getAppConfig(app);\n  return appConfig?.router?.basename ?? \"/\" ?? '';\n}\n\nconst setRuntimeEnv = (renderMode) => {\n  if (renderMode === 'SSG') {\n    process.env.ICE_CORE_SSG = 'true';\n  } else {\n    process.env.ICE_CORE_SSR = 'true';\n  }\n}\n\ninterface RenderOptions {\n  documentOnly?: boolean;\n  renderMode?: RenderMode;\n  basename?: string;\n  serverOnlyBasename?: string;\n  routePath?: string;\n  disableFallback?: boolean;\n  distType?: DistType;\n}\n\nexport async function renderToHTML(requestContext, options: RenderOptions = {}) {\n  const { renderMode = 'SSR' } = options;\n  setRuntimeEnv(renderMode);\n  \n  const mergedOptions = mergeOptions(options);\n  return await runtime.renderToHTML(requestContext, mergedOptions);\n}\n\nexport async function renderToResponse(requestContext, options: RenderOptions = {}) {\n  const { renderMode = 'SSR' } = options;\n  setRuntimeEnv(renderMode);\n  \n  const mergedOptions = mergeOptions(options);\n  runtime.renderToResponse(requestContext, mergedOptions);\n}\n\n\nfunction mergeOptions(options) {\n  const { documentOnly, renderMode = 'SSR', basename, serverOnlyBasename, routePath, disableFallback, distType } = options;\n\n  return {\n    app,\n    assetsManifest,\n    routes,\n    runtimeModules,\n    Document,\n    serverOnlyBasename,\n    basename: basename || getRouterBasename(),\n    documentOnly,\n    renderMode,\n    routePath,\n    disableFallback,\n    routesConfig,\n    distType,\n  };\n}", "import { defineAppConfig } from 'ice';\n\n// App config, see https://v3.ice.work/docs/guide/basic/app\nexport default defineAppConfig(() => ({\n  // Set your configs here.\n}));\n", "import '@/global.css'\nimport type { PageConfig } from './types';\nimport { Link, Outlet, useParams, useSearchParams, useLocation, useNavigate } from '@ice/runtime/router';\nimport { defineAppConfig, useAppData, useData, useConfig, Meta, Title, Links, Scripts, Data, Main, history, KeepAliveOutlet, useMounted, ClientOnly, withSuspense, useSuspenseData, defineDataLoader, defineServerDataLoader, defineStaticDataLoader } from '@ice/runtime';\n\nfunction definePageConfig(pageConfig: () => PageConfig): () => PageConfig {\n  return pageConfig;\n}\n\nexport {\n  definePageConfig,\n  Link,\n  Outlet,\n  useParams,\n  useSearchParams,\n  useLocation,\n  useNavigate,\n  defineAppConfig,\n  useAppData,\n  useData,\n  useConfig,\n  Meta,\n  Title,\n  Links,\n  Scripts,\n  Data,\n  Main,\n  history,\n  KeepAliveOutlet,\n  useMounted,\n  ClientOnly,\n  withSuspense,\n  useSuspenseData,\n  defineDataLoader,\n  defineServerDataLoader,\n  defineStaticDataLoader,};\n\nexport * from './types';\n", "import { Meta, Title, Links, Main, Scripts } from 'ice';\n\nexport default function Document() {\n  return (\n    <html>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"description\" content=\"ice.js 3 lite scaffold\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" />\n        <Meta />\n        <Title />\n        <Links />\n      </head>\n      <body>\n        <Main />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n", "{\"publicPath\":\"/\",\"entries\":{\"main\":[\"js/framework.js\",\"js/vendors-node_modules_pnpm_ice_bundles_0_1_4_node_modules_ice_bundles_compiled_pmmmwh_react-re-e272b9.js\",\"css/main.css\",\"js/main.js\"]},\"pages\":{\"index\":[\"css/p_index.css\",\"js/p_index.js\"]},\"assets\":{}}", "export default [\n  {\n    path: '',\n    load: () => import(/* webpackChunkName: \"p_index\" */ '@/pages/index'),\n    componentName: 'index',\n    index: true,\n    id: 'index',\n    exact: true,\n    exports: [\"default\"],\n  },\n];\n", "// .ice/routes-config.ts\nvar routes_config_default = {};\nexport {\n  routes_config_default as default\n};\n"],
  "mappings": "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",
  "names": ["process", "env", "ICE_CORE_MODE", "__process", "ICE_CORE_ROUTER", "ICE_CORE_ERROR_BOUNDARY", "ICE_CORE_INITIAL_DATA", "ICE_CORE_DEV_PORT", "runtime", "Link", "Outlet", "useParams", "useSearchParams", "useLocation", "useNavigate", "defineAppConfig", "useAppData", "useData", "useConfig", "Meta", "Title", "Links", "Scripts", "Data", "Main", "history", "KeepAliveOutlet", "useMounted", "ClientOnly", "withSuspense", "useSuspenseData", "defineDataLoader", "defineServerDataLoader", "defineStaticDataLoader", "defineAppConfig", "html", "head", "meta", "charSet", "name", "content", "link", "rel", "href", "Meta", "Title", "Links", "body", "Main", "Scripts", "path", "load", "componentName", "index", "id", "exact", "exports", "routes_config_default", "commons", "statics", "runtimeModules", "getRouterBasename", "appConfig", "getAppConfig", "app", "router", "basename", "setRuntimeEnv", "renderMode", "process", "env", "ICE_CORE_SSG", "ICE_CORE_SSR", "renderToHTML", "requestContext", "options", "mergedOptions", "mergeOptions", "renderToResponse", "runtime", "documentOnly", "serverOnlyBasename", "routePath", "disableFallback", "distType", "assetsManifest", "routes", "Document", "routesConfig"]
}
